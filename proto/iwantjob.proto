syntax = "proto3";

package model;

option go_package = "server/model";

service Db{
    rpc GetList(getListReq) returns (List) {}
    rpc CreateCube(createCubeReq) returns (Cube) {}
    rpc UploadImage(UploadImageReq) returns (ImageResp) {}
    rpc StreamList(getListReq) returns (stream CubeStream){}
}

service Messager{
    rpc GetMessages(getMessagesReq) returns (Messages){}
    rpc CreateMessage(createMessageReq) returns (Message){}
    rpc UpdateMessage(updateMessageReq) returns (Message){}
    rpc DeleteMessage(deleteMessageReq) returns (DeletedMessage) {}
    rpc StreamMessages(streamMessagesReq) returns (stream StreamedMessahge){}
}
message DeletedMessage{
    string id = 1;
}
message StreamedMessahge{
    string fid = 1;//User id
    string id = 2;
    string text = 3;
    string photo =4;
    string opType = 5;
    int64 createdAt = 6;
    MUser user = 7;
}
message Messages{
    repeated Message messages = 1;
}

message Message{
    string fid = 1;//User id
    string id = 2;
    string text = 3;
    string photo =4;
    int64 createdAt = 5;
    MUser user = 6;
}

message MUser{
    string Name = 1;
    string Role = 2;
}

message getMessagesReq{
    int64 from = 1;
    int32 first = 2;
}

message createMessageReq{
    string text = 2;
    string photo =3;
}

message updateMessageReq{
    string id = 1;
    string text = 2;
    string photo =3;
}

message streamMessagesReq{
    int64 from = 1;
}

message deleteMessageReq{
    string id= 1;
}

message LoginRequest {
    string username = 1;
    string password = 2;
  }
  
  message LoginResponse { 
    string access_token = 1; 
    string refresh_token = 2;
    string id = 3;
}
  message RefreshReq {
      string refresh_token = 1;
  }
  
  service AuthService {
    rpc Login(LoginRequest) returns (LoginResponse) {};
    rpc SingUp(LoginRequest) returns (LoginResponse) {};
    rpc Refresh(RefreshReq) returns (LoginResponse) {};
  }

message ImageResp{
    string url = 1;
}

message getListReq{
    int32 first = 1;
    int32 offset = 2;
}

message List{
    repeated Cube samples = 1;
}

message CubeStream{
    string fid = 1;
    string url = 3;
    string type = 4;
    string source = 5;
    string id = 6;
    string otype = 7;
}

message Cube{
    string fid = 1;
    string url = 3;
    string type = 4;
    string source = 5;
    string id = 6;
}

message createCubeReq{
    string fid = 1;
    string url = 3;
    string type = 4;
    string source = 5;
}

message UploadImageReq{
    string fid = 1;
    bytes image = 2;
}